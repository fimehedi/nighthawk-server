// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.0.x"]
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique(map: "email_UNIQUE")
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Category {
  id                Int           @id @default(autoincrement())
  name              String
  short_description String
  image             String?
  sub_categories    SubCategory[]
  meta_title        String?
  meta_description  String?       @db.LongText
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt
}

model SubCategory {
  id                Int      @id @default(autoincrement())
  name              String
  short_description String
  image             String?
  category          Category @relation(fields: [category_id], references: [id], onDelete: Cascade)
  category_id       Int
  assets            Asset[]
  meta_title        String?
  meta_description  String?  @db.LongText
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
}

model Asset {
  id                Int          @id @default(autoincrement())
  name              String
  cover             String
  resolution        String
  size              String
  download_link     String?
  short_description String?
  sub_category      SubCategory  @relation(fields: [sub_category_id], references: [id], onDelete: Cascade)
  sub_category_id   Int
  images            AssetImage[]
  meta_title        String?
  meta_description  String?      @db.LongText
  created_at        DateTime     @default(now())
  updated_at        DateTime     @updatedAt
}

model AssetImage {
  id         Int      @id @default(autoincrement())
  image      String
  asset_id   Int
  asset      Asset    @relation(fields: [asset_id], references: [id], onDelete: Cascade)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model AboutUs {
  id                Int      @id @default(autoincrement())
  slug              String   @unique
  title             String
  cover             String
  short_description String
  content           String   @db.LongText
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
}

model Setting {
  id               Int      @id @default(autoincrement())
  slug             String   @unique
  site_name        String
  site_description String   @db.LongText
  site_logo        String
  site_favicon     String
  site_email       String
  site_phone       String
  site_address     String
  site_footer      String
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
}

model Page {
  id                Int      @id @default(autoincrement())
  slug              String   @unique
  title             String
  cover             String
  short_description String
  content           String   @db.LongText
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
}

model Slider {
  id                Int      @id @default(autoincrement())
  name              String
  logo              String
  short_description String
  image             String
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
}

model Social {
  id         Int      @id @default(autoincrement())
  name       String
  url        String
  icon       String
  order      Int      @default(0)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model InnovativeFurnitures {
  id                Int      @id @default(autoincrement())
  title             String
  short_description String
  urlOne            String
  urlTwo            String
  urlThree          String
  urlFour           String
  bgImg             String
  order             Int      @default(0)
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
}

model SupportedBy {
  id                Int      @id @default(autoincrement())
  title             String
  short_description String
  imageOne          String
  imageTwo          String
  imageThree        String
  imageFour         String
  imageFive         String
  order             Int      @default(0)
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
}

model Blog {
  id                Int      @id @default(autoincrement())
  title             String
  name              String
  short_description String   @db.LongText
  paragraph_one     String   @db.LongText
  paragraph_two     String   @db.LongText
  paragraph_three   String   @db.LongText
  image             String
  bgImage           String
  back_link         String
  order             Int      @default(0)
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
}
